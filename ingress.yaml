global:
  ingress:
    enabled: true
    className: nginx
    host: "Camunda-kube.acheron-tech.com"
    tls:
      # Ingress.tls.enabled if true, then tls is configured on the ingress resource. If enabled the Ingress.host need to be defined.
      enabled: false
      # Ingress.tls.secretName defines the secret name which contains the TLS private key and certificate
      secretName: "mycert"
  identity:
    auth:
      publicIssuerUrl: "https://Camunda-kube.acheron-tech.com/auth/realms/camunda-platform"
      operate:
        redirectUrl: "http://Camunda-kube.acheron-tech.com/operate"
      tasklist:
        redirectUrl: "http://Camunda-kube.acheron-tech.com/tasklist"
      optimize:
        redirectUrl: "http://Camunda-kube.acheron-tech.com/optimize"
      webModeler:
        redirectUrl: "http://Camunda-kube.acheron-tech.com/modeler"

identity:
  contextPath: "/identity"
  fullURL: "https://Camunda-kube.acheron-tech.com/identity"
  # Keycloak configuration, for the keycloak dependency chart which is used by identity
  keycloak: # see: http://github.com/bitnami/charts/tree/master/bitnami/keycloak#parameters
    ingress: # see: http://www.keycloak.org/server/reverseproxy
      enabled: true
      ingressClassName: nginx
      hostname: "Camunda-kube.acheron-tech.com"
    extraEnvVars: # see: http://github.com/bitnami/bitnami-docker-keycloak#configuration
      - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
        value: "true"
      - name: KEYCLOAK_EXTRA_ARGS
        value: "-Dkeycloak.frontendUrl=https://Camunda-kube.acheron-tech.com/auth"
operate:
  contextPath: "/operate"
  ingress:
    enabled: true
    className: nginx
    annotations:
      ingress.kubernetes.io/rewrite-target:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    path: /
    host: "Camunda-kube.acheron-tech.com"
    tls:
      enabled: false
      secretName: ""

optimize:
  contextPath: "/optimize"
  ingress:
    enabled: true
    className: nginx
    annotations:
      ingress.kubernetes.io/rewrite-target:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    path: /
    host: "Camunda-kube.acheron-tech.com"
    tls:
      enabled: false
      secretName: ""

tasklist:
  contextPath: "/tasklist"
  ingress:
    enabled: true
    className: nginx
    annotations:
      ingress.kubernetes.io/rewrite-target:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    path: /
    host: "Camunda-kube.acheron-tech.com"
    tls:
      enabled: false
      secretName: ""

webModeler:
  # The context path is used for the web application that will be accessed by users in the browser.
  # In addition, a WebSocket endpoint will be exposed on "[contextPath]-ws", e.g. "/modeler-ws".
  contextPath: "/modeler"

zeebe-gateway:
  ingress:
    enabled: true
    className: nginx
    host: "zeebe.Camunda-kube.acheron-tech.com"
